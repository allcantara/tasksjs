{"version":3,"sources":["views/List/ItemTypes/index.js","views/List/Card/index.js","views/List/index.js","views/Add/index.js","views/Container.js","routes.js","App.js","index.js"],"names":["Card","id","text","index","moveCard","useContext","AppContext","tasks","setTasks","useState","isEdit","setIsEdit","taskText","setTaskText","ref","useRef","useDrop","accept","ItemTypes","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","type","collect","isDragging","opacity","handleUpdateTask","data","list","map","handleEditTask","drag","style","className","value","onChange","e","target","onKeyPress","key","onClick","size","filter","task","handleDeleteTask","Container","useCallback","dragCard","update","$splice","i","setText","handleAdd","trim","Math","random","useEffect","localStorage","getItem","taskArray","JSON","parse","clear","setItem","stringify","placeholder","color","createContext","DndProvider","backend","Backend","Provider","Add","List","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f079255.chunk.js","sourcesContent":["export default {\n  CARD: \"card\",\n};\n","import React, { useRef, useContext, useState } from \"react\";\nimport { FiTrash, FiEdit3, FiSave } from \"react-icons/fi\";\nimport { MdClose } from \"react-icons/md\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport ItemTypes from \"../ItemTypes\";\n\nimport { AppContext } from \"../../Container\";\n\nconst Card = ({ id, text, index, moveCard }) => {\n  const { tasks, setTasks } = useContext(AppContext);\n  const [isEdit, setIsEdit] = useState(false);\n  const [taskText, setTaskText] = useState(text);\n\n  const ref = useRef(null);\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      // Não substitua itens por eles mesmos\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determinar retângulo em seixos\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\n      // Obter meio vertical\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determinar a posição do mouse\n      const clientOffset = monitor.getClientOffset();\n      // Colocar os pixels no topo\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      // Faça o movimento apenas quando o mouse tiver cruzado metade da altura dos itens\n      // Ao arrastar para baixo, mova-se apenas quando o cursor estiver abaixo de 50%\n      // Ao arrastar para cima, mova-se apenas quando o cursor estiver acima de 50%\n      // Arrastando para baixo\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Arrastando para cima\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      // Hora de realmente executar a ação\n      moveCard(dragIndex, hoverIndex);\n      // Nota: estamos alterando o item do monitor aqui!\n      // Geralmente é melhor evitar mutações,\n      // mas é bom aqui por uma questão de desempenho\n      // para evitar pesquisas caras de índice.\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const opacity = isDragging ? 0 : 1;\n  drag(drop(ref));\n\n  function handleDeleteTask(item) {\n    const list = tasks.filter((task) => task.id !== item.id);\n    setTasks([...list]);\n  }\n\n  function handleUpdateTask(data) {\n    let list = tasks;\n    list.map((item) => {\n      if (item.id === data.id) {\n        item.text = data.taskText;\n      }\n    });\n    setTasks([...list]);\n    handleEditTask();\n  }\n\n  function handleEditTask() {\n    setIsEdit(() => !isEdit);\n  }\n\n  function onClickEnter(event, data) {\n    if (event.key === \"Enter\") {\n      handleUpdateTask(data);\n    }\n  }\n\n  return (\n    <li ref={ref} style={{ opacity }} className=\"list-group-item\">\n      {!isEdit ? (\n        taskText\n      ) : (\n        <input\n          type=\"text\"\n          className=\"input-text\"\n          value={taskText}\n          onChange={(e) => setTaskText(e.target.value)}\n          onKeyPress={(e) => onClickEnter(e, { id, taskText })}\n        />\n      )}\n      <div className=\"d-flex\">\n        {!isEdit ? (\n          <>\n            <button className=\"button-none\" onClick={() => handleEditTask()}>\n              <FiEdit3 />\n            </button>\n            <button\n              className=\"button-none\"\n              onClick={() => handleDeleteTask({ id, taskText })}\n            >\n              <FiTrash />\n            </button>\n          </>\n        ) : (\n          <>\n            <button\n              className=\"button-none ml-2\"\n              onClick={() => handleUpdateTask({ id, taskText })}\n            >\n              <FiSave />\n            </button>\n            <button className=\"button-none\" onClick={() => handleEditTask()}>\n              <MdClose size={20} />\n            </button>\n          </>\n        )}\n      </div>\n    </li>\n  );\n};\n\nexport default Card;\n","import React, { useContext, useCallback } from \"react\";\nimport update from \"immutability-helper\";\nimport Card from \"./Card\";\n\nimport { AppContext } from \"../Container\";\n\nconst Container = () => {\n  const { tasks, setTasks } = useContext(AppContext);\n\n  const moveCard = useCallback(\n    (dragIndex, hoverIndex) => {\n      const dragCard = tasks[dragIndex];\n      setTasks(\n        update(tasks, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard],\n          ],\n        })\n      );\n    },\n    [tasks]\n  );\n\n  return (\n    <div className=\"list-area\">\n      <ul className=\"list-group list-group-flush\" id=\"ul-list\">\n        {tasks.map((task, i) => (\n          <Card\n            key={task.id}\n            index={i}\n            id={task.id}\n            text={task.text}\n            moveCard={moveCard}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Container;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { FiPlus } from \"react-icons/fi\";\nimport { AppContext } from \"../Container\";\n\nexport default () => {\n  const { setTasks, tasks } = useContext(AppContext);\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    const list = getListLocalStorage();\n    if (list) {\n      const taskArray = JSON.parse(list);\n      setTasks([...taskArray]);\n    }\n  }, [setTasks]);\n\n  useEffect(() => {\n    localStorage.clear();\n    localStorage.setItem(\"TASKS\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  function handleAdd() {\n    if (!text.trim()) return;\n    setTasks([{ id: Math.random(4), text }, ...tasks]);\n    setText(\"\");\n  }\n\n  function onKeyEnter(event) {\n    if (event.key === \"Enter\") {\n      handleAdd();\n    }\n  }\n\n  function getListLocalStorage() {\n    return localStorage.getItem(\"TASKS\");\n  }\n\n  return (\n    <div className=\"d-flex py-3\">\n      <input\n        type=\"text\"\n        className=\"mr-2 input-text\"\n        placeholder=\"Nova tarefa...\"\n        id=\"input-task\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        onKeyPress={(e) => onKeyEnter(e)}\n      />\n      <button\n        className=\"btn button-add\"\n        id=\"btn-add\"\n        onClick={() => handleAdd()}\n      >\n        <FiPlus color=\"rgb(25, 24, 31)\" />\n      </button>\n    </div>\n  );\n};\n","import React, { useState, createContext } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\nimport List from \"./List\";\nimport Add from \"./Add\";\n\nexport const AppContext = createContext();\n\nfunction Container() {\n  const [tasks, setTasks] = useState([]);\n\n  return (\n    <DndProvider backend={Backend}>\n      <AppContext.Provider value={{ tasks, setTasks }}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 offset-md-2\">\n              <h1 className=\"title\">Tarefas diárias</h1>\n              <span className=\"tip\">\n                Utilize o mouse para arrastar/soltar e ordene a lista da maneira\n                que desejar.\n              </span>\n              <Add />\n              <List />\n            </div>\n          </div>\n        </div>\n      </AppContext.Provider>\n    </DndProvider>\n  );\n}\n\nexport default Container;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport List from \"./views/Container\";\n\nexport default () => {\n  return (\n    <BrowserRouter>\n      {/* <Switch> */}\n      <Route path=\"/tasksjs\" exact component={List} />\n      {/* </Switch> */}\n    </BrowserRouter>\n  );\n};\n","import React from \"react\";\nimport Route from \"./routes\";\nimport \"./global.css\";\n\nfunction App() {\n  return <Route />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}